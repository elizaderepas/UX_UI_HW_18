@import url('https://fonts.googleapis.com/css2?family=Hind+Madurai:wght@300;400;600&family=Lora:wght@700&family=Montserrat:wght@600;700&display=swap');
body {
    height: 100vh;
    margin: 0;
    font-family: 'Hind Madurai', sans-serif;
}
ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}
a {
    text-decoration: none;
}
img {
    width: 100%
}
.nav-container {
    background: transparent 98%;
    background-color: white;
}
a {
    color: black;
}
header {
    display: flex;
    justify-content: space-between;
    padding: 70px;
    margin: auto;
    align-items: center;
}
.logo {
    color: black;
    font-weight: bold;
    font-family: 'Lora', serif;
    font-size: 31px;
    padding: 20px;
}
nav,
ul,
li {
    float: right;
    padding: 0 20px;
    font-family: 'Hind Madurai', sans-serif;
    font-weight: 300;
    font-size: 22px;
}
.hero {
    background: white;
    color: black;
    margin: 90px;
}
h1 {
    font-family: 'Montserrat', sans-serif;
    font-size: 120px;
    font-weight: 700;
}
h2 {
    font-family: 'Lora', serif;
    font-size: 30px;
    font-weight: 700;
}
p {
    font-family: 'Hind Madurai', sans-serif;
    font-size: 19px;
    font-weight: 300;
}
/*  */
/* New stuff from Richard */
/*  */
/* Basically always want to turn this bad boy on, check the w3c docs if you're still scratching your head about box-sizing */
* {
    box-sizing: border-box;
}
/* Let's start by initialising your purple swatcha as a variable so it's easier to reuse */
:root {
    --purple: #8B0FF8;
}
/* This gives you a simple class to add in your purple full stops etc. Best attached to something like a <span> */
.purple {
    color: var(--purple);
}
/* This is your new flex parent. We use justify-content: flex-end to send to to the right aka, the end of the flex parent */
.avatar {
    display: flex;
    justify-content: flex-end;
}
/* this is your new flex child. I've put a clipping mask in there, you can drop your image directly in or just replace with whatever you've like really
.avatar-mask {
    width: 200px;
    height: 200px;
    background-color: white;
    border-radius: 50%;
}
/* Here I reset the margin on your h1 a bit because its pretty huge and bumping your avatar down too much */
h1 {
    margin: 24px;
}
/* This is a very finely tuned shadow from my personal use elevation sustem. This is level 12 of 24 possible values. This will probably come up in class at some point but you can ask me more if you're curious
.shadow-12 {
    box-shadow: 0px 7px 8px -4px rgba(0, 0, 0, 0.2), 0px 12px 17px 2px rgba(0, 0, 0, 0.14), 0px 5px 22px 4px rgba(0, 0, 0, 0.12);
}
/* Here's how you style buttons! */
button {
    background-color: white;
    border: none;
    color: var(--purple);
    font-size: 18px;
    font-weight: 550;
    padding: 8px 0px;
    border-radius: 24px;
    transition: 240ms;
    border: none;
}
button:hover {
    background-color: var(--purple);
    padding: 8px 24px;
    color: white;
}
/* Let's get your skills section nice and flexy */
.skills {
    display: flex;
    flex-flow: row wrap;
    margin: 74px;
}
/* These are the flex children, we use flex-basis of 33% to set an 'initial' flex size of 1/3rd of the total available space. Pretty clever! google flex-basis to learn more. Flex-basis basically makes your flex children say "I WANT to be this big" so they'll try to do that before anything else */
.skill {
    flex-grow: 1;
    flex-basis: 33%;
    padding: 16px;
}
/* You will be learning about these tonight. This is a media query that says "well, a 3 way split is fine on a big screen, but we should only use 2 columns of flex items on screens smaller than 900px... */
@media screen and (max-width: 900px) {
    .skill {
        flex-basis: 50%;
    }
}
/* ...and if we get really small, let's just forget about splitting this up at all and flatten things out */
@media screen and (max-width: 640px) {
    .skill {
        flex-basis: 100%;
    }
}
/* You can see these media queries in action by resizing your window */

.footer {
    display: flex;
    flex-flow: row wrap;
    margin: 74px;
}